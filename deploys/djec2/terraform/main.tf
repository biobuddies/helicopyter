# AUTOGENERATED by helicopyter

terraform {
  required_providers {
    aws = {
      version = "5.96.0"
      source  = "aws"
    }
  }
}

provider "aws" {
  region = "us-west-2"
}

resource "aws_vpc" "this" {
  cidr_block = "10.0.0.0/16"
}

resource "aws_subnet" "private" {
  cidr_block = "10.0.1.0/24"
  tags = {
    Name = "private"
  }
  vpc_id = aws_vpc.this.id
}

resource "aws_subnet" "public" {
  cidr_block = "10.0.2.0/24"
  tags = {
    Name = "public"
  }
  vpc_id = aws_vpc.this.id
}

resource "aws_internet_gateway" "this" {
  vpc_id = aws_vpc.this.id
}

resource "aws_route_table" "this" {
  route {
    carrier_gateway_id         = null
    cidr_block                 = "0.0.0.0/0"
    core_network_arn           = null
    destination_prefix_list_id = null
    egress_only_gateway_id     = null
    gateway_id                 = aws_internet_gateway.this.id
    ipv6_cidr_block            = null
    local_gateway_id           = null
    nat_gateway_id             = null
    network_interface_id       = null
    transit_gateway_id         = null
    vpc_endpoint_id            = null
    vpc_peering_connection_id  = null
  }
  vpc_id = aws_vpc.this.id
}

resource "aws_route_table_association" "this" {
  route_table_id = aws_route_table.this.id
  subnet_id      = aws_subnet.public.id
}

resource "aws_lb_target_group" "this" {
  port     = 80
  protocol = "HTTP"
  vpc_id   = aws_vpc.this.id
}

resource "aws_instance" "beat-0" {
  ami           = "ami-0026a04369a3093cc"
  instance_type = "t2.micro"
}

resource "aws_instance" "web-0" {
  ami           = "ami-0026a04369a3093cc"
  instance_type = "t2.micro"
}

resource "aws_instance" "web-1" {
  ami           = "ami-0026a04369a3093cc"
  instance_type = "t2.micro"
}

resource "aws_instance" "worker-0" {
  ami           = "ami-0026a04369a3093cc"
  instance_type = "t2.micro"
}

resource "aws_lb_target_group_attachment" "web-0" {
  port             = 8000
  target_group_arn = aws_lb_target_group.this.arn
  target_id        = aws_instance.web-0.id
}

resource "aws_lb_target_group_attachment" "web-1" {
  port             = 8000
  target_group_arn = aws_lb_target_group.this.arn
  target_id        = aws_instance.web-1.id
}

resource "aws_lb" "this" {
  internal           = false
  load_balancer_type = "application"
  subnets = [
    "${aws_subnet.public.id}"
  ]
}

resource "aws_lb_listener" "this" {
  load_balancer_arn = aws_lb.this.arn
  port              = 80
  protocol          = "HTTP"
  default_action {
    target_group_arn = aws_lb_target_group.this.arn
    type             = "forward"
  }
}
